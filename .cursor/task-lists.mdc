---
description: 
globs: 
alwaysApply: true
---
---
description: This rule explains how to create and manage task lists to track project progress.
globs: *
alwaysApply: false
---

# Task List Management

Guidelines for creating and managing task lists in Markdown files to track project progress

## Task List Creation

1. Create task lists in a markdown file (in the project root):
   - Use `TASKS.md` or a descriptive name relevant to the feature (e.g., `ASSISTANT_CHAT.md`)
   - Include a clear title and description of the feature being implemented

2. Structure the file with these sections:
   ```markdown
   # Feature Name Implementation
   
   Brief description of the feature and its purpose.
   
   ## Completed Tasks
   
   - [x] Task 1 that has been completed
   - [x] Task 2 that has been completed
   
   ## In Progress Tasks
   
   - [ ] Task 3 currently being worked on
   
   ## Future Tasks
   
   - [ ] Task 4 planned for future implementation
   - [ ] Task 5 planned for future implementation
   - [ ] Task 6 planned for future implementation
   
   ## Implementation Plan
   
   Detailed description of how the feature will be implemented.
   
   ### Relevant Files
   
   - path/to/file1.ts - Description of purpose
   - path/to/file2.ts - Description of purpose
   ```

## Task List Maintenance

1. Update the task list as you progress:
   - Mark tasks as completed by changing `[ ]` to `[x]`
   - Add new tasks as they are identified
   - Move tasks between sections as appropriate
   - **Only work on one task at a time** - move only a single task to the "In Progress" section

2. Keep "Relevant Files" section updated with:
   - File paths that have been created or modified
   - Brief descriptions of each file's purpose
   - Status indicators (e.g., âœ…) for completed components

3. Add implementation details:
   - Architecture decisions
   - Data flow descriptions
   - Technical components needed
   - Environment configuration

## AI Instructions

When working with task lists, the AI should:

1. **Only implement one task at a time** - focus on a single task until it is complete
2. Regularly update the task list file after implementing each task
3. Mark completed tasks with [x] when finished
4. Add new tasks discovered during implementation
5. Maintain the "Relevant Files" section with accurate file paths and descriptions
6. Document implementation details, especially for complex features
7. When selecting the next task to implement, choose the first task from the "Future Tasks" section
8. Move the selected task to "In Progress" and ensure only one task is in this section
9. After implementing a task, update the file to reflect progress

## Example Task Update

When updating a task from "In Progress" to "Completed":

```markdown
## In Progress Tasks

- [ ] Implement database schema

## Future Tasks

- [ ] Create API endpoints for data access

## Completed Tasks

- [x] Set up project structure
- [x] Configure environment variables
```

Should become:

```markdown
## In Progress Tasks

- [ ] Create API endpoints for data access

## Future Tasks

## Completed Tasks

- [x] Set up project structure
- [x] Configure environment variables
- [x] Implement database schema

```